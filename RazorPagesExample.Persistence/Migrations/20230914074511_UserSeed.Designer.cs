// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RazorPagesExample.Persistence;

#nullable disable

namespace RazorPagesExample.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230914074511_UserSeed")]
    partial class UserSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.22");

            modelBuilder.Entity("RazorPagesExample.Persistence.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(2023, 9, 14, 9, 45, 10, 918, DateTimeKind.Local).AddTicks(1875),
                            DateOfBirth = new DateTime(1989, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user@example.com",
                            Name = "user",
                            Password = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
